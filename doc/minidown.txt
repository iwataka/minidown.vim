*minidown.txt* Minimalist markup language previewer
*minidown*

==============================================================================
TOC                                                          *minidown-contents*

  INTRO .......................... |minidown-intro|
  USAGE .......................... |minidown-usage|
  OPTIONS ........................ |minidown-options|
  COMMANDS ....................... |minidown-commands|

==============================================================================
INTRO                                                           *minidown-intro*

Minidown is a markup language previewer for minimalists. This doesn't require
complex settings but only pandoc (and other processors for some document
formats) on your PATH. This doesn't have live-preview feature and you should
reload the browser page manually to update the content - but you really need
it ?

==============================================================================
USAGE                                                           *minidown-usage*

Just run :Minidown command on your preferred buffer. You should install pandoc
command (and xdg-open if you use Linux). Currently supports `markdown` and
`rst`.

==============================================================================
OPTIONS                                                       *minidown-options*
                                                       *g:minidown_auto_compile*
>
    let g:minidown_auto_compile = 1
<

If this value is non-zero, Minidown will compile previewed buffers automatically
when saving.

------------------------------------------------------------------------------
                                                           *g:minidown_open_cmd*
>
    let g:minidown_open_cmd = 'xdg-open' (on Unix)
    let g:minidown_open_cmd = 'cygstart' (on Cygwin)
    let g:minidown_open_cmd = 'rundll32 url.dll,FileProtocolHandler' (on Windows)
    let g:minidown_open_cmd = 'open' (on OSX)
<

Minidown uses this value to open html files converted from the markup language
buffers. In most cases, you don't have to set this manually because Minidown
will automatically set appropriate value to this variable.

------------------------------------------------------------------------------
                                                          *g:minidown_pandoc_css*

>
    let g:minidown_pandoc_css = expand(expand('<sfile>:p:h:h').'/css/github.css')
<

Minidown contains the default css which imitates GitHub theme, but you can
specify your own css to change the appearance of preview pages.

------------------------------------------------------------------------------
                                                         *g:minidown_pandoc_from*
>
    let g:minidown_pandoc_from = {
          \ 'markdown': 'markdown_github-hard_line_breaks',
          \ 'rst': 'rst'
          \ }
<

This value specify the type of the markup language file to be converted. By
default, Minidown treat the markdown files as github-flavored markdown.

------------------------------------------------------------------------------
                                                           *g:minidown_pandoc_to*

>
    let g:minidown_pandoc_to = 'html5'
<

This value specify the type of the pandoc output. By default, Minidown converts
markup language files into html5.

------------------------------------------------------------------------------
                                                   *g:minidown_pandoc_enable_toc*

>
    let g:minidown_pandoc_enable_toc = 1
<

If this value equals to 1, pandoc automatically generate the table of contents
for your preferred file.

------------------------------------------------------------------------------
                                                         *g:minidown_plantuml_to*

>
    let g:minidown_plantuml_to = 'png'
<

This value specify the type of the plantuml output.

------------------------------------------------------------------------------
                                                *g:minidown_plantuml_jar_version*

>
    let g:minidown_plantuml_jar_version = '8059'
<

This value specify the version of the plantuml jar on Maven Repository
(https://mvnrepository.com).

==============================================================================
COMMAND                                                      *minidown-commands*
                                                            *minidown-:Minidown*
>
    :Minidown
<
Open the preview page of the current buffer in your primary browser.

------------------------------------------------------------------------------
                                                     *minidown-:MinidownCompile*
>
    :MinidownCompile
<
Compile the current buffer by using pandoc. If you set non-zero value to
g:minidown_auto_compile (or do nothing to it), Minidown will automatically run
this command when saving, so you don't have to run this command.

==============================================================================
vim:ft=help:tw=78
